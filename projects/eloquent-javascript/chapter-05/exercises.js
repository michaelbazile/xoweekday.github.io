// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
//use reduce on input array param 
//at each iteration concat the seed (any empty array), with each element (array)
//return the entire reduce function
return array.reduce((seed, element) => seed.concat(element), []);

}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, testFunc, updateFunc, bodyFunc) {
for(let value = start; testFunc(value); value = updateFunc(value)){
  bodyFunc(value);
}
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {

return array.reduce((seedBool, element) => {
  return (!test(element)) ? false : seedBool;
}, true);
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
let scripts = countBy(string, (char) => {
  let script = characterScript(char.codePointAt(0))
  
  if(script){
    return script.direction;
  }
  return null;
});

scripts.sort((a, b) => {
  return b.count - a.count;
});
return scripts[0].name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
